from math import *
# import sympy as sym
from sympy import *
from sympy.solvers import solve
import numpy as np

# t0  = Symbol('t0')
# t1  = Symbol('t1')
# # r = 2 + t1
# t1 = 5
# t0 = 2
# print(type((t0 + t1)))
# print((t0 + t1).evalf())

# exit()
t   = Symbol('t')
t0  = Symbol('t0')

k0x = Symbol('k0x')
k0y = Symbol('k0y')
k0z = Symbol('k0z')
x01 = Symbol('x01')
x00 = Symbol('x00')
y01 = Symbol('y01')
y00 = Symbol('y00')
z01 = Symbol('z01')
z00 = Symbol('z00')

k0x = (x01 - x00) / t0
k0y = (y01 - y00) / t0
k0z = (z01 - z00) / t0

b0x = Symbol('b0x')
b0y = Symbol('b0y')
b0z = Symbol('b0z')
b0x = x00# - k0x*t0
b0y = y00# - k0y*t0
b0z = z00# - k0z*t0

x0 = Symbol('x0')
y0 = Symbol('y0')
z0 = Symbol('z0')
x0 = k0x*t + b0x
y0 = k0y*t + b0y
z0 = k0z*t + b0z
# y0 = Symbol('y0')
# z0 = Symbol('z0')

k1x = Symbol('k1x')
k1y = Symbol('k1y')
k1z = Symbol('k1z')
x11 = Symbol('x11')
x10 = Symbol('x10')
y11 = Symbol('y11')
y10 = Symbol('y10')
z11 = Symbol('z11')
z10 = Symbol('z10')

k0z = (z11 - z10) / t0
k0y = (y11 - y10) / t0
k0x = (x11 - x10) / t0


b1x = Symbol('b1x')
b1y = Symbol('b1y')
# pprint(k0x)
b1z = Symbol('b1z')
b1x = x10# - k0x*t0
b1y = y10# - k0y*t0
b1z = z10# - k0z*t0

x1 = Symbol('x1')
y1 = Symbol('y1')
z1 = Symbol('z1')
x1 = k1x*t + b1x
y1 = k1y*t + b1y
z1 = k1z*t + b1z

r1 = Symbol('r1')
r2 = Symbol('r2')

# print(roots)
# pprint(roots)
# roots = solve((x0-x1)**2 + (y0-y1)**2 + (z0-z1)**2 - (r1 + r2)**2, t)
# print(roots_2)
# roots = solve((x0-x1)**2 - (r1 + r2)**2, t)
# roots_2 = simplify(roots)
# pprint(roots_2)
# roots = [(t0*(k1x*t0*x00 - k1x*t0*x10 + k1y*t0*y00 - k1y*t0*y10 + k1z*t0*z00 - k1z*t0*z10 + x00**2 - x00*x01 - x00*x10 + x01*x10 + y00**2 - y00*y01 - y00*y10 + y01*y10 + z00**2 - z00*z01 - z00*z10 + z01*z10) + sqrt(t0**2*(k1x**2*r1**2*t0**2 + 2*k1x**2*r1*r2*t0**2 + k1x**2*r2**2*t0**2 - k1x**2*t0**2*y00**2 + 2*k1x**2*t0**2*y00*y10 - k1x**2*t0**2*y10**2 - k1x**2*t0**2*z00**2 + 2*k1x**2*t0**2*z00*z10 - k1x**2*t0**2*z10**2 + 2*k1x*k1y*t0**2*x00*y00 - 2*k1x*k1y*t0**2*x00*y10 - 2*k1x*k1y*t0**2*x10*y00 + 2*k1x*k1y*t0**2*x10*y10 + 2*k1x*k1z*t0**2*x00*z00 - 2*k1x*k1z*t0**2*x00*z10 - 2*k1x*k1z*t0**2*x10*z00 + 2*k1x*k1z*t0**2*x10*z10 + 2*k1x*r1**2*t0*x00 - 2*k1x*r1**2*t0*x01 + 4*k1x*r1*r2*t0*x00 - 4*k1x*r1*r2*t0*x01 + 2*k1x*r2**2*t0*x00 - 2*k1x*r2**2*t0*x01 - 2*k1x*t0*x00*y00*y01 + 2*k1x*t0*x00*y00*y10 + 2*k1x*t0*x00*y01*y10 - 2*k1x*t0*x00*y10**2 - 2*k1x*t0*x00*z00*z01 + 2*k1x*t0*x00*z00*z10 + 2*k1x*t0*x00*z01*z10 - 2*k1x*t0*x00*z10**2 + 2*k1x*t0*x01*y00**2 - 4*k1x*t0*x01*y00*y10 + 2*k1x*t0*x01*y10**2 + 2*k1x*t0*x01*z00**2 - 4*k1x*t0*x01*z00*z10 + 2*k1x*t0*x01*z10**2 - 2*k1x*t0*x10*y00**2 + 2*k1x*t0*x10*y00*y01 + 2*k1x*t0*x10*y00*y10 - 2*k1x*t0*x10*y01*y10 - 2*k1x*t0*x10*z00**2 + 2*k1x*t0*x10*z00*z01 + 2*k1x*t0*x10*z00*z10 - 2*k1x*t0*x10*z01*z10 + k1y**2*r1**2*t0**2 + 2*k1y**2*r1*r2*t0**2 + k1y**2*r2**2*t0**2 - k1y**2*t0**2*x00**2 + 2*k1y**2*t0**2*x00*x10 - k1y**2*t0**2*x10**2 - k1y**2*t0**2*z00**2 + 2*k1y**2*t0**2*z00*z10 - k1y**2*t0**2*z10**2 + 2*k1y*k1z*t0**2*y00*z00 - 2*k1y*k1z*t0**2*y00*z10 - 2*k1y*k1z*t0**2*y10*z00 + 2*k1y*k1z*t0**2*y10*z10 + 2*k1y*r1**2*t0*y00 - 2*k1y*r1**2*t0*y01 + 4*k1y*r1*r2*t0*y00 - 4*k1y*r1*r2*t0*y01 + 2*k1y*r2**2*t0*y00 - 2*k1y*r2**2*t0*y01 + 2*k1y*t0*x00**2*y01 - 2*k1y*t0*x00**2*y10 - 2*k1y*t0*x00*x01*y00 + 2*k1y*t0*x00*x01*y10 + 2*k1y*t0*x00*x10*y00 - 4*k1y*t0*x00*x10*y01 + 2*k1y*t0*x00*x10*y10 + 2*k1y*t0*x01*x10*y00 - 2*k1y*t0*x01*x10*y10 - 2*k1y*t0*x10**2*y00 + 2*k1y*t0*x10**2*y01 - 2*k1y*t0*y00*z00*z01 + 2*k1y*t0*y00*z00*z10 + 2*k1y*t0*y00*z01*z10 - 2*k1y*t0*y00*z10**2 + 2*k1y*t0*y01*z00**2 - 4*k1y*t0*y01*z00*z10 + 2*k1y*t0*y01*z10**2 - 2*k1y*t0*y10*z00**2 + 2*k1y*t0*y10*z00*z01 + 2*k1y*t0*y10*z00*z10 - 2*k1y*t0*y10*z01*z10 + k1z**2*r1**2*t0**2 + 2*k1z**2*r1*r2*t0**2 + k1z**2*r2**2*t0**2 - k1z**2*t0**2*x00**2 + 2*k1z**2*t0**2*x00*x10 - k1z**2*t0**2*x10**2 - k1z**2*t0**2*y00**2 + 2*k1z**2*t0**2*y00*y10 - k1z**2*t0**2*y10**2 + 2*k1z*r1**2*t0*z00 - 2*k1z*r1**2*t0*z01 + 4*k1z*r1*r2*t0*z00 - 4*k1z*r1*r2*t0*z01 + 2*k1z*r2**2*t0*z00 - 2*k1z*r2**2*t0*z01 + 2*k1z*t0*x00**2*z01 - 2*k1z*t0*x00**2*z10 - 2*k1z*t0*x00*x01*z00 + 2*k1z*t0*x00*x01*z10 + 2*k1z*t0*x00*x10*z00 - 4*k1z*t0*x00*x10*z01 + 2*k1z*t0*x00*x10*z10 + 2*k1z*t0*x01*x10*z00 - 2*k1z*t0*x01*x10*z10 - 2*k1z*t0*x10**2*z00 + 2*k1z*t0*x10**2*z01 + 2*k1z*t0*y00**2*z01 - 2*k1z*t0*y00**2*z10 - 2*k1z*t0*y00*y01*z00 + 2*k1z*t0*y00*y01*z10 + 2*k1z*t0*y00*y10*z00 - 4*k1z*t0*y00*y10*z01 + 2*k1z*t0*y00*y10*z10 + 2*k1z*t0*y01*y10*z00 - 2*k1z*t0*y01*y10*z10 - 2*k1z*t0*y10**2*z00 + 2*k1z*t0*y10**2*z01 + r1**2*x00**2 - 2*r1**2*x00*x01 + r1**2*x01**2 + r1**2*y00**2 - 2*r1**2*y00*y01 + r1**2*y01**2 + r1**2*z00**2 - 2*r1**2*z00*z01 + r1**2*z01**2 + 2*r1*r2*x00**2 - 4*r1*r2*x00*x01 + 2*r1*r2*x01**2 + 2*r1*r2*y00**2 - 4*r1*r2*y00*y01 + 2*r1*r2*y01**2 + 2*r1*r2*z00**2 - 4*r1*r2*z00*z01 + 2*r1*r2*z01**2 + r2**2*x00**2 - 2*r2**2*x00*x01 + r2**2*x01**2 + r2**2*y00**2 - 2*r2**2*y00*y01 + r2**2*y01**2 + r2**2*z00**2 - 2*r2**2*z00*z01 + r2**2*z01**2 - x00**2*y01**2 + 2*x00**2*y01*y10 - x00**2*y10**2 - x00**2*z01**2 + 2*x00**2*z01*z10 - x00**2*z10**2 + 2*x00*x01*y00*y01 - 2*x00*x01*y00*y10 - 2*x00*x01*y01*y10 + 2*x00*x01*y10**2 + 2*x00*x01*z00*z01 - 2*x00*x01*z00*z10 - 2*x00*x01*z01*z10 + 2*x00*x01*z10**2 - 2*x00*x10*y00*y01 + 2*x00*x10*y00*y10 + 2*x00*x10*y01**2 - 2*x00*x10*y01*y10 - 2*x00*x10*z00*z01 + 2*x00*x10*z00*z10 + 2*x00*x10*z01**2 - 2*x00*x10*z01*z10 - x01**2*y00**2 + 2*x01**2*y00*y10 - x01**2*y10**2 - x01**2*z00**2 + 2*x01**2*z00*z10 - x01**2*z10**2 + 2*x01*x10*y00**2 - 2*x01*x10*y00*y01 - 2*x01*x10*y00*y10 + 2*x01*x10*y01*y10 + 2*x01*x10*z00**2 - 2*x01*x10*z00*z01 - 2*x01*x10*z00*z10 + 2*x01*x10*z01*z10 - x10**2*y00**2 + 2*x10**2*y00*y01 - x10**2*y01**2 - x10**2*z00**2 + 2*x10**2*z00*z01 - x10**2*z01**2 - y00**2*z01**2 + 2*y00**2*z01*z10 - y00**2*z10**2 + 2*y00*y01*z00*z01 - 2*y00*y01*z00*z10 - 2*y00*y01*z01*z10 + 2*y00*y01*z10**2 - 2*y00*y10*z00*z01 + 2*y00*y10*z00*z10 + 2*y00*y10*z01**2 - 2*y00*y10*z01*z10 - y01**2*z00**2 + 2*y01**2*z00*z10 - y01**2*z10**2 + 2*y01*y10*z00**2 - 2*y01*y10*z00*z01 - 2*y01*y10*z00*z10 + 2*y01*y10*z01*z10 - y10**2*z00**2 + 2*y10**2*z00*z01 - y10**2*z01**2)))/(k1x**2*t0**2 + 2*k1x*t0*x00 - 2*k1x*t0*x01 + k1y**2*t0**2 + 2*k1y*t0*y00 - 2*k1y*t0*y01 + k1z**2*t0**2 + 2*k1z*t0*z00 - 2*k1z*t0*z01 + x00**2 - 2*x00*x01 + x01**2 + y00**2 - 2*y00*y01 + y01**2 + z00**2 - 2*z00*z01 + z01**2), (k1x*t0**2*x00 - k1x*t0**2*x10 + k1y*t0**2*y00 - k1y*t0**2*y10 + k1z*t0**2*z00 - k1z*t0**2*z10 + t0*x00**2 - t0*x00*x01 - t0*x00*x10 + t0*x01*x10 + t0*y00**2 - t0*y00*y01 - t0*y00*y10 + t0*y01*y10 + t0*z00**2 - t0*z00*z01 - t0*z00*z10 + t0*z01*z10 - sqrt(t0**2*(k1x**2*r1**2*t0**2 + 2*k1x**2*r1*r2*t0**2 + k1x**2*r2**2*t0**2 - k1x**2*t0**2*y00**2 + 2*k1x**2*t0**2*y00*y10 - k1x**2*t0**2*y10**2 - k1x**2*t0**2*z00**2 + 2*k1x**2*t0**2*z00*z10 - k1x**2*t0**2*z10**2 + 2*k1x*k1y*t0**2*x00*y00 - 2*k1x*k1y*t0**2*x00*y10 - 2*k1x*k1y*t0**2*x10*y00 + 2*k1x*k1y*t0**2*x10*y10 + 2*k1x*k1z*t0**2*x00*z00 - 2*k1x*k1z*t0**2*x00*z10 - 2*k1x*k1z*t0**2*x10*z00 + 2*k1x*k1z*t0**2*x10*z10 + 2*k1x*r1**2*t0*x00 - 2*k1x*r1**2*t0*x01 + 4*k1x*r1*r2*t0*x00 - 4*k1x*r1*r2*t0*x01 + 2*k1x*r2**2*t0*x00 - 2*k1x*r2**2*t0*x01 - 2*k1x*t0*x00*y00*y01 + 2*k1x*t0*x00*y00*y10 + 2*k1x*t0*x00*y01*y10 - 2*k1x*t0*x00*y10**2 - 2*k1x*t0*x00*z00*z01 + 2*k1x*t0*x00*z00*z10 + 2*k1x*t0*x00*z01*z10 - 2*k1x*t0*x00*z10**2 + 2*k1x*t0*x01*y00**2 - 4*k1x*t0*x01*y00*y10 + 2*k1x*t0*x01*y10**2 + 2*k1x*t0*x01*z00**2 - 4*k1x*t0*x01*z00*z10 + 2*k1x*t0*x01*z10**2 - 2*k1x*t0*x10*y00**2 + 2*k1x*t0*x10*y00*y01 + 2*k1x*t0*x10*y00*y10 - 2*k1x*t0*x10*y01*y10 - 2*k1x*t0*x10*z00**2 + 2*k1x*t0*x10*z00*z01 + 2*k1x*t0*x10*z00*z10 - 2*k1x*t0*x10*z01*z10 + k1y**2*r1**2*t0**2 + 2*k1y**2*r1*r2*t0**2 + k1y**2*r2**2*t0**2 - k1y**2*t0**2*x00**2 + 2*k1y**2*t0**2*x00*x10 - k1y**2*t0**2*x10**2 - k1y**2*t0**2*z00**2 + 2*k1y**2*t0**2*z00*z10 - k1y**2*t0**2*z10**2 + 2*k1y*k1z*t0**2*y00*z00 - 2*k1y*k1z*t0**2*y00*z10 - 2*k1y*k1z*t0**2*y10*z00 + 2*k1y*k1z*t0**2*y10*z10 + 2*k1y*r1**2*t0*y00 - 2*k1y*r1**2*t0*y01 + 4*k1y*r1*r2*t0*y00 - 4*k1y*r1*r2*t0*y01 + 2*k1y*r2**2*t0*y00 - 2*k1y*r2**2*t0*y01 + 2*k1y*t0*x00**2*y01 - 2*k1y*t0*x00**2*y10 - 2*k1y*t0*x00*x01*y00 + 2*k1y*t0*x00*x01*y10 + 2*k1y*t0*x00*x10*y00 - 4*k1y*t0*x00*x10*y01 + 2*k1y*t0*x00*x10*y10 + 2*k1y*t0*x01*x10*y00 - 2*k1y*t0*x01*x10*y10 - 2*k1y*t0*x10**2*y00 + 2*k1y*t0*x10**2*y01 - 2*k1y*t0*y00*z00*z01 + 2*k1y*t0*y00*z00*z10 + 2*k1y*t0*y00*z01*z10 - 2*k1y*t0*y00*z10**2 + 2*k1y*t0*y01*z00**2 - 4*k1y*t0*y01*z00*z10 + 2*k1y*t0*y01*z10**2 - 2*k1y*t0*y10*z00**2 + 2*k1y*t0*y10*z00*z01 + 2*k1y*t0*y10*z00*z10 - 2*k1y*t0*y10*z01*z10 + k1z**2*r1**2*t0**2 + 2*k1z**2*r1*r2*t0**2 + k1z**2*r2**2*t0**2 - k1z**2*t0**2*x00**2 + 2*k1z**2*t0**2*x00*x10 - k1z**2*t0**2*x10**2 - k1z**2*t0**2*y00**2 + 2*k1z**2*t0**2*y00*y10 - k1z**2*t0**2*y10**2 + 2*k1z*r1**2*t0*z00 - 2*k1z*r1**2*t0*z01 + 4*k1z*r1*r2*t0*z00 - 4*k1z*r1*r2*t0*z01 + 2*k1z*r2**2*t0*z00 - 2*k1z*r2**2*t0*z01 + 2*k1z*t0*x00**2*z01 - 2*k1z*t0*x00**2*z10 - 2*k1z*t0*x00*x01*z00 + 2*k1z*t0*x00*x01*z10 + 2*k1z*t0*x00*x10*z00 - 4*k1z*t0*x00*x10*z01 + 2*k1z*t0*x00*x10*z10 + 2*k1z*t0*x01*x10*z00 - 2*k1z*t0*x01*x10*z10 - 2*k1z*t0*x10**2*z00 + 2*k1z*t0*x10**2*z01 + 2*k1z*t0*y00**2*z01 - 2*k1z*t0*y00**2*z10 - 2*k1z*t0*y00*y01*z00 + 2*k1z*t0*y00*y01*z10 + 2*k1z*t0*y00*y10*z00 - 4*k1z*t0*y00*y10*z01 + 2*k1z*t0*y00*y10*z10 + 2*k1z*t0*y01*y10*z00 - 2*k1z*t0*y01*y10*z10 - 2*k1z*t0*y10**2*z00 + 2*k1z*t0*y10**2*z01 + r1**2*x00**2 - 2*r1**2*x00*x01 + r1**2*x01**2 + r1**2*y00**2 - 2*r1**2*y00*y01 + r1**2*y01**2 + r1**2*z00**2 - 2*r1**2*z00*z01 + r1**2*z01**2 + 2*r1*r2*x00**2 - 4*r1*r2*x00*x01 + 2*r1*r2*x01**2 + 2*r1*r2*y00**2 - 4*r1*r2*y00*y01 + 2*r1*r2*y01**2 + 2*r1*r2*z00**2 - 4*r1*r2*z00*z01 + 2*r1*r2*z01**2 + r2**2*x00**2 - 2*r2**2*x00*x01 + r2**2*x01**2 + r2**2*y00**2 - 2*r2**2*y00*y01 + r2**2*y01**2 + r2**2*z00**2 - 2*r2**2*z00*z01 + r2**2*z01**2 - x00**2*y01**2 + 2*x00**2*y01*y10 - x00**2*y10**2 - x00**2*z01**2 + 2*x00**2*z01*z10 - x00**2*z10**2 + 2*x00*x01*y00*y01 - 2*x00*x01*y00*y10 - 2*x00*x01*y01*y10 + 2*x00*x01*y10**2 + 2*x00*x01*z00*z01 - 2*x00*x01*z00*z10 - 2*x00*x01*z01*z10 + 2*x00*x01*z10**2 - 2*x00*x10*y00*y01 + 2*x00*x10*y00*y10 + 2*x00*x10*y01**2 - 2*x00*x10*y01*y10 - 2*x00*x10*z00*z01 + 2*x00*x10*z00*z10 + 2*x00*x10*z01**2 - 2*x00*x10*z01*z10 - x01**2*y00**2 + 2*x01**2*y00*y10 - x01**2*y10**2 - x01**2*z00**2 + 2*x01**2*z00*z10 - x01**2*z10**2 + 2*x01*x10*y00**2 - 2*x01*x10*y00*y01 - 2*x01*x10*y00*y10 + 2*x01*x10*y01*y10 + 2*x01*x10*z00**2 - 2*x01*x10*z00*z01 - 2*x01*x10*z00*z10 + 2*x01*x10*z01*z10 - x10**2*y00**2 + 2*x10**2*y00*y01 - x10**2*y01**2 - x10**2*z00**2 + 2*x10**2*z00*z01 - x10**2*z01**2 - y00**2*z01**2 + 2*y00**2*z01*z10 - y00**2*z10**2 + 2*y00*y01*z00*z01 - 2*y00*y01*z00*z10 - 2*y00*y01*z01*z10 + 2*y00*y01*z10**2 - 2*y00*y10*z00*z01 + 2*y00*y10*z00*z10 + 2*y00*y10*z01**2 - 2*y00*y10*z01*z10 - y01**2*z00**2 + 2*y01**2*z00*z10 - y01**2*z10**2 + 2*y01*y10*z00**2 - 2*y01*y10*z00*z01 - 2*y01*y10*z00*z10 + 2*y01*y10*z01*z10 - y10**2*z00**2 + 2*y10**2*z00*z01 - y10**2*z01**2)))/(k1x**2*t0**2 + 2*k1x*t0*x00 - 2*k1x*t0*x01 + k1y**2*t0**2 + 2*k1y*t0*y00 - 2*k1y*t0*y01 + k1z**2*t0**2 + 2*k1z*t0*z00 - 2*k1z*t0*z01 + x00**2 - 2*x00*x01 + x01**2 + y00**2 - 2*y00*y01 + y01**2 + z00**2 - 2*z00*z01 + z01**2)]
# print(len(roots))
t0 = 1e-2
x00, y00, z00 = 0, 1, 5
x01, y01, z01 = 0, 10, 15
x10, y10, z10 = 0, 11, 14
x11, y11, z11 = 0, -2, -5
r1, r2 = 1, 1,
print((x00+5).evalf())
# root = (k1x*t0**2*x00 - k1x*t0**2*x10 + k1y*t0**2*y00 - k1y*t0**2*y10 + k1z*t0**2*z00 - k1z*t0**2*z10 + t0*x00**2 - t0*x00*x01 - t0*x00*x10 + t0*x01*x10 + t0*y00**2 - t0*y00*y01 - t0*y00*y10 + t0*y01*y10 + t0*z00**2 - t0*z00*z01 - t0*z00*z10 + t0*z01*z10 - sqrt(t0**2*(k1x**2*r1**2*t0**2 + 2*k1x**2*r1*r2*t0**2 + k1x**2*r2**2*t0**2 - k1x**2*t0**2*y00**2 + 2*k1x**2*t0**2*y00*y10 - k1x**2*t0**2*y10**2 - k1x**2*t0**2*z00**2 + 2*k1x**2*t0**2*z00*z10 - k1x**2*t0**2*z10**2 + 2*k1x*k1y*t0**2*x00*y00 - 2*k1x*k1y*t0**2*x00*y10 - 2*k1x*k1y*t0**2*x10*y00 + 2*k1x*k1y*t0**2*x10*y10 + 2*k1x*k1z*t0**2*x00*z00 - 2*k1x*k1z*t0**2*x00*z10 - 2*k1x*k1z*t0**2*x10*z00 + 2*k1x*k1z*t0**2*x10*z10 + 2*k1x*r1**2*t0*x00 - 2*k1x*r1**2*t0*x01 + 4*k1x*r1*r2*t0*x00 - 4*k1x*r1*r2*t0*x01 + 2*k1x*r2**2*t0*x00 - 2*k1x*r2**2*t0*x01 - 2*k1x*t0*x00*y00*y01 + 2*k1x*t0*x00*y00*y10 + 2*k1x*t0*x00*y01*y10 - 2*k1x*t0*x00*y10**2 - 2*k1x*t0*x00*z00*z01 + 2*k1x*t0*x00*z00*z10 + 2*k1x*t0*x00*z01*z10 - 2*k1x*t0*x00*z10**2 + 2*k1x*t0*x01*y00**2 - 4*k1x*t0*x01*y00*y10 + 2*k1x*t0*x01*y10**2 + 2*k1x*t0*x01*z00**2 - 4*k1x*t0*x01*z00*z10 + 2*k1x*t0*x01*z10**2 - 2*k1x*t0*x10*y00**2 + 2*k1x*t0*x10*y00*y01 + 2*k1x*t0*x10*y00*y10 - 2*k1x*t0*x10*y01*y10 - 2*k1x*t0*x10*z00**2 + 2*k1x*t0*x10*z00*z01 + 2*k1x*t0*x10*z00*z10 - 2*k1x*t0*x10*z01*z10 + k1y**2*r1**2*t0**2 + 2*k1y**2*r1*r2*t0**2 + k1y**2*r2**2*t0**2 - k1y**2*t0**2*x00**2 + 2*k1y**2*t0**2*x00*x10 - k1y**2*t0**2*x10**2 - k1y**2*t0**2*z00**2 + 2*k1y**2*t0**2*z00*z10 - k1y**2*t0**2*z10**2 + 2*k1y*k1z*t0**2*y00*z00 - 2*k1y*k1z*t0**2*y00*z10 - 2*k1y*k1z*t0**2*y10*z00 + 2*k1y*k1z*t0**2*y10*z10 + 2*k1y*r1**2*t0*y00 - 2*k1y*r1**2*t0*y01 + 4*k1y*r1*r2*t0*y00 - 4*k1y*r1*r2*t0*y01 + 2*k1y*r2**2*t0*y00 - 2*k1y*r2**2*t0*y01 + 2*k1y*t0*x00**2*y01 - 2*k1y*t0*x00**2*y10 - 2*k1y*t0*x00*x01*y00 + 2*k1y*t0*x00*x01*y10 + 2*k1y*t0*x00*x10*y00 - 4*k1y*t0*x00*x10*y01 + 2*k1y*t0*x00*x10*y10 + 2*k1y*t0*x01*x10*y00 - 2*k1y*t0*x01*x10*y10 - 2*k1y*t0*x10**2*y00 + 2*k1y*t0*x10**2*y01 - 2*k1y*t0*y00*z00*z01 + 2*k1y*t0*y00*z00*z10 + 2*k1y*t0*y00*z01*z10 - 2*k1y*t0*y00*z10**2 + 2*k1y*t0*y01*z00**2 - 4*k1y*t0*y01*z00*z10 + 2*k1y*t0*y01*z10**2 - 2*k1y*t0*y10*z00**2 + 2*k1y*t0*y10*z00*z01 + 2*k1y*t0*y10*z00*z10 - 2*k1y*t0*y10*z01*z10 + k1z**2*r1**2*t0**2 + 2*k1z**2*r1*r2*t0**2 + k1z**2*r2**2*t0**2 - k1z**2*t0**2*x00**2 + 2*k1z**2*t0**2*x00*x10 - k1z**2*t0**2*x10**2 - k1z**2*t0**2*y00**2 + 2*k1z**2*t0**2*y00*y10 - k1z**2*t0**2*y10**2 + 2*k1z*r1**2*t0*z00 - 2*k1z*r1**2*t0*z01 + 4*k1z*r1*r2*t0*z00 - 4*k1z*r1*r2*t0*z01 + 2*k1z*r2**2*t0*z00 - 2*k1z*r2**2*t0*z01 + 2*k1z*t0*x00**2*z01 - 2*k1z*t0*x00**2*z10 - 2*k1z*t0*x00*x01*z00 + 2*k1z*t0*x00*x01*z10 + 2*k1z*t0*x00*x10*z00 - 4*k1z*t0*x00*x10*z01 + 2*k1z*t0*x00*x10*z10 + 2*k1z*t0*x01*x10*z00 - 2*k1z*t0*x01*x10*z10 - 2*k1z*t0*x10**2*z00 + 2*k1z*t0*x10**2*z01 + 2*k1z*t0*y00**2*z01 - 2*k1z*t0*y00**2*z10 - 2*k1z*t0*y00*y01*z00 + 2*k1z*t0*y00*y01*z10 + 2*k1z*t0*y00*y10*z00 - 4*k1z*t0*y00*y10*z01 + 2*k1z*t0*y00*y10*z10 + 2*k1z*t0*y01*y10*z00 - 2*k1z*t0*y01*y10*z10 - 2*k1z*t0*y10**2*z00 + 2*k1z*t0*y10**2*z01 + r1**2*x00**2 - 2*r1**2*x00*x01 + r1**2*x01**2 + r1**2*y00**2 - 2*r1**2*y00*y01 + r1**2*y01**2 + r1**2*z00**2 - 2*r1**2*z00*z01 + r1**2*z01**2 + 2*r1*r2*x00**2 - 4*r1*r2*x00*x01 + 2*r1*r2*x01**2 + 2*r1*r2*y00**2 - 4*r1*r2*y00*y01 + 2*r1*r2*y01**2 + 2*r1*r2*z00**2 - 4*r1*r2*z00*z01 + 2*r1*r2*z01**2 + r2**2*x00**2 - 2*r2**2*x00*x01 + r2**2*x01**2 + r2**2*y00**2 - 2*r2**2*y00*y01 + r2**2*y01**2 + r2**2*z00**2 - 2*r2**2*z00*z01 + r2**2*z01**2 - x00**2*y01**2 + 2*x00**2*y01*y10 - x00**2*y10**2 - x00**2*z01**2 + 2*x00**2*z01*z10 - x00**2*z10**2 + 2*x00*x01*y00*y01 - 2*x00*x01*y00*y10 - 2*x00*x01*y01*y10 + 2*x00*x01*y10**2 + 2*x00*x01*z00*z01 - 2*x00*x01*z00*z10 - 2*x00*x01*z01*z10 + 2*x00*x01*z10**2 - 2*x00*x10*y00*y01 + 2*x00*x10*y00*y10 + 2*x00*x10*y01**2 - 2*x00*x10*y01*y10 - 2*x00*x10*z00*z01 + 2*x00*x10*z00*z10 + 2*x00*x10*z01**2 - 2*x00*x10*z01*z10 - x01**2*y00**2 + 2*x01**2*y00*y10 - x01**2*y10**2 - x01**2*z00**2 + 2*x01**2*z00*z10 - x01**2*z10**2 + 2*x01*x10*y00**2 - 2*x01*x10*y00*y01 - 2*x01*x10*y00*y10 + 2*x01*x10*y01*y10 + 2*x01*x10*z00**2 - 2*x01*x10*z00*z01 - 2*x01*x10*z00*z10 + 2*x01*x10*z01*z10 - x10**2*y00**2 + 2*x10**2*y00*y01 - x10**2*y01**2 - x10**2*z00**2 + 2*x10**2*z00*z01 - x10**2*z01**2 - y00**2*z01**2 + 2*y00**2*z01*z10 - y00**2*z10**2 + 2*y00*y01*z00*z01 - 2*y00*y01*z00*z10 - 2*y00*y01*z01*z10 + 2*y00*y01*z10**2 - 2*y00*y10*z00*z01 + 2*y00*y10*z00*z10 + 2*y00*y10*z01**2 - 2*y00*y10*z01*z10 - y01**2*z00**2 + 2*y01**2*z00*z10 - y01**2*z10**2 + 2*y01*y10*z00**2 - 2*y01*y10*z00*z01 - 2*y01*y10*z00*z10 + 2*y01*y10*z01*z10 - y10**2*z00**2 + 2*y10**2*z00*z01 - y10**2*z01**2)))/(k1x**2*t0**2 + 2*k1x*t0*x00 - 2*k1x*t0*x01 + k1y**2*t0**2 + 2*k1y*t0*y00 - 2*k1y*t0*y01 + k1z**2*t0**2 + 2*k1z*t0*z00 - 2*k1z*t0*z01 + x00**2 - 2*x00*x01 + x01**2 + y00**2 - 2*y00*y01 + y01**2 + z00**2 - 2*z00*z01 + z01**2)
# print(type(root))

# print((t0*(k1x*t0*x00 - k1x*t0*x10 + k1y*t0*y00 - k1y*t0*y10 + k1z*t0*z00 - k1z*t0*z10 + x00**2 - x00*x01 - x00*x10 + x01*x10 + y00**2 - y00*y01 - y00*y10 + y01*y10 + z00**2 - z00*z01 - z00*z10 + z01*z10) + sqrt(t0**2*(k1x**2*r1**2*t0**2 + 2*k1x**2*r1*r2*t0**2 + k1x**2*r2**2*t0**2 - k1x**2*t0**2*y00**2 + 2*k1x**2*t0**2*y00*y10 - k1x**2*t0**2*y10**2 - k1x**2*t0**2*z00**2 + 2*k1x**2*t0**2*z00*z10 - k1x**2*t0**2*z10**2 + 2*k1x*k1y*t0**2*x00*y00 - 2*k1x*k1y*t0**2*x00*y10 - 2*k1x*k1y*t0**2*x10*y00 + 2*k1x*k1y*t0**2*x10*y10 + 2*k1x*k1z*t0**2*x00*z00 - 2*k1x*k1z*t0**2*x00*z10 - 2*k1x*k1z*t0**2*x10*z00 + 2*k1x*k1z*t0**2*x10*z10 + 2*k1x*r1**2*t0*x00 - 2*k1x*r1**2*t0*x01 + 4*k1x*r1*r2*t0*x00 - 4*k1x*r1*r2*t0*x01 + 2*k1x*r2**2*t0*x00 - 2*k1x*r2**2*t0*x01 - 2*k1x*t0*x00*y00*y01 + 2*k1x*t0*x00*y00*y10 + 2*k1x*t0*x00*y01*y10 - 2*k1x*t0*x00*y10**2 - 2*k1x*t0*x00*z00*z01 + 2*k1x*t0*x00*z00*z10 + 2*k1x*t0*x00*z01*z10 - 2*k1x*t0*x00*z10**2 + 2*k1x*t0*x01*y00**2 - 4*k1x*t0*x01*y00*y10 + 2*k1x*t0*x01*y10**2 + 2*k1x*t0*x01*z00**2 - 4*k1x*t0*x01*z00*z10 + 2*k1x*t0*x01*z10**2 - 2*k1x*t0*x10*y00**2 + 2*k1x*t0*x10*y00*y01 + 2*k1x*t0*x10*y00*y10 - 2*k1x*t0*x10*y01*y10 - 2*k1x*t0*x10*z00**2 + 2*k1x*t0*x10*z00*z01 + 2*k1x*t0*x10*z00*z10 - 2*k1x*t0*x10*z01*z10 + k1y**2*r1**2*t0**2 + 2*k1y**2*r1*r2*t0**2 + k1y**2*r2**2*t0**2 - k1y**2*t0**2*x00**2 + 2*k1y**2*t0**2*x00*x10 - k1y**2*t0**2*x10**2 - k1y**2*t0**2*z00**2 + 2*k1y**2*t0**2*z00*z10 - k1y**2*t0**2*z10**2 + 2*k1y*k1z*t0**2*y00*z00 - 2*k1y*k1z*t0**2*y00*z10 - 2*k1y*k1z*t0**2*y10*z00 + 2*k1y*k1z*t0**2*y10*z10 + 2*k1y*r1**2*t0*y00 - 2*k1y*r1**2*t0*y01 + 4*k1y*r1*r2*t0*y00 - 4*k1y*r1*r2*t0*y01 + 2*k1y*r2**2*t0*y00 - 2*k1y*r2**2*t0*y01 + 2*k1y*t0*x00**2*y01 - 2*k1y*t0*x00**2*y10 - 2*k1y*t0*x00*x01*y00 + 2*k1y*t0*x00*x01*y10 + 2*k1y*t0*x00*x10*y00 - 4*k1y*t0*x00*x10*y01 + 2*k1y*t0*x00*x10*y10 + 2*k1y*t0*x01*x10*y00 - 2*k1y*t0*x01*x10*y10 - 2*k1y*t0*x10**2*y00 + 2*k1y*t0*x10**2*y01 - 2*k1y*t0*y00*z00*z01 + 2*k1y*t0*y00*z00*z10 + 2*k1y*t0*y00*z01*z10 - 2*k1y*t0*y00*z10**2 + 2*k1y*t0*y01*z00**2 - 4*k1y*t0*y01*z00*z10 + 2*k1y*t0*y01*z10**2 - 2*k1y*t0*y10*z00**2 + 2*k1y*t0*y10*z00*z01 + 2*k1y*t0*y10*z00*z10 - 2*k1y*t0*y10*z01*z10 + k1z**2*r1**2*t0**2 + 2*k1z**2*r1*r2*t0**2 + k1z**2*r2**2*t0**2 - k1z**2*t0**2*x00**2 + 2*k1z**2*t0**2*x00*x10 - k1z**2*t0**2*x10**2 - k1z**2*t0**2*y00**2 + 2*k1z**2*t0**2*y00*y10 - k1z**2*t0**2*y10**2 + 2*k1z*r1**2*t0*z00 - 2*k1z*r1**2*t0*z01 + 4*k1z*r1*r2*t0*z00 - 4*k1z*r1*r2*t0*z01 + 2*k1z*r2**2*t0*z00 - 2*k1z*r2**2*t0*z01 + 2*k1z*t0*x00**2*z01 - 2*k1z*t0*x00**2*z10 - 2*k1z*t0*x00*x01*z00 + 2*k1z*t0*x00*x01*z10 + 2*k1z*t0*x00*x10*z00 - 4*k1z*t0*x00*x10*z01 + 2*k1z*t0*x00*x10*z10 + 2*k1z*t0*x01*x10*z00 - 2*k1z*t0*x01*x10*z10 - 2*k1z*t0*x10**2*z00 + 2*k1z*t0*x10**2*z01 + 2*k1z*t0*y00**2*z01 - 2*k1z*t0*y00**2*z10 - 2*k1z*t0*y00*y01*z00 + 2*k1z*t0*y00*y01*z10 + 2*k1z*t0*y00*y10*z00 - 4*k1z*t0*y00*y10*z01 + 2*k1z*t0*y00*y10*z10 + 2*k1z*t0*y01*y10*z00 - 2*k1z*t0*y01*y10*z10 - 2*k1z*t0*y10**2*z00 + 2*k1z*t0*y10**2*z01 + r1**2*x00**2 - 2*r1**2*x00*x01 + r1**2*x01**2 + r1**2*y00**2 - 2*r1**2*y00*y01 + r1**2*y01**2 + r1**2*z00**2 - 2*r1**2*z00*z01 + r1**2*z01**2 + 2*r1*r2*x00**2 - 4*r1*r2*x00*x01 + 2*r1*r2*x01**2 + 2*r1*r2*y00**2 - 4*r1*r2*y00*y01 + 2*r1*r2*y01**2 + 2*r1*r2*z00**2 - 4*r1*r2*z00*z01 + 2*r1*r2*z01**2 + r2**2*x00**2 - 2*r2**2*x00*x01 + r2**2*x01**2 + r2**2*y00**2 - 2*r2**2*y00*y01 + r2**2*y01**2 + r2**2*z00**2 - 2*r2**2*z00*z01 + r2**2*z01**2 - x00**2*y01**2 + 2*x00**2*y01*y10 - x00**2*y10**2 - x00**2*z01**2 + 2*x00**2*z01*z10 - x00**2*z10**2 + 2*x00*x01*y00*y01 - 2*x00*x01*y00*y10 - 2*x00*x01*y01*y10 + 2*x00*x01*y10**2 + 2*x00*x01*z00*z01 - 2*x00*x01*z00*z10 - 2*x00*x01*z01*z10 + 2*x00*x01*z10**2 - 2*x00*x10*y00*y01 + 2*x00*x10*y00*y10 + 2*x00*x10*y01**2 - 2*x00*x10*y01*y10 - 2*x00*x10*z00*z01 + 2*x00*x10*z00*z10 + 2*x00*x10*z01**2 - 2*x00*x10*z01*z10 - x01**2*y00**2 + 2*x01**2*y00*y10 - x01**2*y10**2 - x01**2*z00**2 + 2*x01**2*z00*z10 - x01**2*z10**2 + 2*x01*x10*y00**2 - 2*x01*x10*y00*y01 - 2*x01*x10*y00*y10 + 2*x01*x10*y01*y10 + 2*x01*x10*z00**2 - 2*x01*x10*z00*z01 - 2*x01*x10*z00*z10 + 2*x01*x10*z01*z10 - x10**2*y00**2 + 2*x10**2*y00*y01 - x10**2*y01**2 - x10**2*z00**2 + 2*x10**2*z00*z01 - x10**2*z01**2 - y00**2*z01**2 + 2*y00**2*z01*z10 - y00**2*z10**2 + 2*y00*y01*z00*z01 - 2*y00*y01*z00*z10 - 2*y00*y01*z01*z10 + 2*y00*y01*z10**2 - 2*y00*y10*z00*z01 + 2*y00*y10*z00*z10 + 2*y00*y10*z01**2 - 2*y00*y10*z01*z10 - y01**2*z00**2 + 2*y01**2*z00*z10 - y01**2*z10**2 + 2*y01*y10*z00**2 - 2*y01*y10*z00*z01 - 2*y01*y10*z00*z10 + 2*y01*y10*z01*z10 - y10**2*z00**2 + 2*y10**2*z00*z01 - y10**2*z01**2)))/(k1x**2*t0**2 + 2*k1x*t0*x00 - 2*k1x*t0*x01 + k1y**2*t0**2 + 2*k1y*t0*y00 - 2*k1y*t0*y01 + k1z**2*t0**2 + 2*k1z*t0*z00 - 2*k1z*t0*z01 + x00**2 - 2*x00*x01 + x01**2 + y00**2 - 2*y00*y01 + y01**2 + z00**2 - 2*z00*z01 + z01**2))
# pprint(root.evalf())
# print((k1x*t0**2*x00 - k1x*t0**2*x10 + k1y*t0**2*y00 - k1y*t0**2*y10 + k1z*t0**2*z00 - k1z*t0**2*z10 + t0*x00**2 - t0*x00*x01 - t0*x00*x10 + t0*x01*x10 + t0*y00**2 - t0*y00*y01 - t0*y00*y10 + t0*y01*y10 + t0*z00**2 - t0*z00*z01 - t0*z00*z10 + t0*z01*z10 - sqrt(t0**2*(k1x**2*r1**2*t0**2 + 2*k1x**2*r1*r2*t0**2 + k1x**2*r2**2*t0**2 - k1x**2*t0**2*y00**2 + 2*k1x**2*t0**2*y00*y10 - k1x**2*t0**2*y10**2 - k1x**2*t0**2*z00**2 + 2*k1x**2*t0**2*z00*z10 - k1x**2*t0**2*z10**2 + 2*k1x*k1y*t0**2*x00*y00 - 2*k1x*k1y*t0**2*x00*y10 - 2*k1x*k1y*t0**2*x10*y00 + 2*k1x*k1y*t0**2*x10*y10 + 2*k1x*k1z*t0**2*x00*z00 - 2*k1x*k1z*t0**2*x00*z10 - 2*k1x*k1z*t0**2*x10*z00 + 2*k1x*k1z*t0**2*x10*z10 + 2*k1x*r1**2*t0*x00 - 2*k1x*r1**2*t0*x01 + 4*k1x*r1*r2*t0*x00 - 4*k1x*r1*r2*t0*x01 + 2*k1x*r2**2*t0*x00 - 2*k1x*r2**2*t0*x01 - 2*k1x*t0*x00*y00*y01 + 2*k1x*t0*x00*y00*y10 + 2*k1x*t0*x00*y01*y10 - 2*k1x*t0*x00*y10**2 - 2*k1x*t0*x00*z00*z01 + 2*k1x*t0*x00*z00*z10 + 2*k1x*t0*x00*z01*z10 - 2*k1x*t0*x00*z10**2 + 2*k1x*t0*x01*y00**2 - 4*k1x*t0*x01*y00*y10 + 2*k1x*t0*x01*y10**2 + 2*k1x*t0*x01*z00**2 - 4*k1x*t0*x01*z00*z10 + 2*k1x*t0*x01*z10**2 - 2*k1x*t0*x10*y00**2 + 2*k1x*t0*x10*y00*y01 + 2*k1x*t0*x10*y00*y10 - 2*k1x*t0*x10*y01*y10 - 2*k1x*t0*x10*z00**2 + 2*k1x*t0*x10*z00*z01 + 2*k1x*t0*x10*z00*z10 - 2*k1x*t0*x10*z01*z10 + k1y**2*r1**2*t0**2 + 2*k1y**2*r1*r2*t0**2 + k1y**2*r2**2*t0**2 - k1y**2*t0**2*x00**2 + 2*k1y**2*t0**2*x00*x10 - k1y**2*t0**2*x10**2 - k1y**2*t0**2*z00**2 + 2*k1y**2*t0**2*z00*z10 - k1y**2*t0**2*z10**2 + 2*k1y*k1z*t0**2*y00*z00 - 2*k1y*k1z*t0**2*y00*z10 - 2*k1y*k1z*t0**2*y10*z00 + 2*k1y*k1z*t0**2*y10*z10 + 2*k1y*r1**2*t0*y00 - 2*k1y*r1**2*t0*y01 + 4*k1y*r1*r2*t0*y00 - 4*k1y*r1*r2*t0*y01 + 2*k1y*r2**2*t0*y00 - 2*k1y*r2**2*t0*y01 + 2*k1y*t0*x00**2*y01 - 2*k1y*t0*x00**2*y10 - 2*k1y*t0*x00*x01*y00 + 2*k1y*t0*x00*x01*y10 + 2*k1y*t0*x00*x10*y00 - 4*k1y*t0*x00*x10*y01 + 2*k1y*t0*x00*x10*y10 + 2*k1y*t0*x01*x10*y00 - 2*k1y*t0*x01*x10*y10 - 2*k1y*t0*x10**2*y00 + 2*k1y*t0*x10**2*y01 - 2*k1y*t0*y00*z00*z01 + 2*k1y*t0*y00*z00*z10 + 2*k1y*t0*y00*z01*z10 - 2*k1y*t0*y00*z10**2 + 2*k1y*t0*y01*z00**2 - 4*k1y*t0*y01*z00*z10 + 2*k1y*t0*y01*z10**2 - 2*k1y*t0*y10*z00**2 + 2*k1y*t0*y10*z00*z01 + 2*k1y*t0*y10*z00*z10 - 2*k1y*t0*y10*z01*z10 + k1z**2*r1**2*t0**2 + 2*k1z**2*r1*r2*t0**2 + k1z**2*r2**2*t0**2 - k1z**2*t0**2*x00**2 + 2*k1z**2*t0**2*x00*x10 - k1z**2*t0**2*x10**2 - k1z**2*t0**2*y00**2 + 2*k1z**2*t0**2*y00*y10 - k1z**2*t0**2*y10**2 + 2*k1z*r1**2*t0*z00 - 2*k1z*r1**2*t0*z01 + 4*k1z*r1*r2*t0*z00 - 4*k1z*r1*r2*t0*z01 + 2*k1z*r2**2*t0*z00 - 2*k1z*r2**2*t0*z01 + 2*k1z*t0*x00**2*z01 - 2*k1z*t0*x00**2*z10 - 2*k1z*t0*x00*x01*z00 + 2*k1z*t0*x00*x01*z10 + 2*k1z*t0*x00*x10*z00 - 4*k1z*t0*x00*x10*z01 + 2*k1z*t0*x00*x10*z10 + 2*k1z*t0*x01*x10*z00 - 2*k1z*t0*x01*x10*z10 - 2*k1z*t0*x10**2*z00 + 2*k1z*t0*x10**2*z01 + 2*k1z*t0*y00**2*z01 - 2*k1z*t0*y00**2*z10 - 2*k1z*t0*y00*y01*z00 + 2*k1z*t0*y00*y01*z10 + 2*k1z*t0*y00*y10*z00 - 4*k1z*t0*y00*y10*z01 + 2*k1z*t0*y00*y10*z10 + 2*k1z*t0*y01*y10*z00 - 2*k1z*t0*y01*y10*z10 - 2*k1z*t0*y10**2*z00 + 2*k1z*t0*y10**2*z01 + r1**2*x00**2 - 2*r1**2*x00*x01 + r1**2*x01**2 + r1**2*y00**2 - 2*r1**2*y00*y01 + r1**2*y01**2 + r1**2*z00**2 - 2*r1**2*z00*z01 + r1**2*z01**2 + 2*r1*r2*x00**2 - 4*r1*r2*x00*x01 + 2*r1*r2*x01**2 + 2*r1*r2*y00**2 - 4*r1*r2*y00*y01 + 2*r1*r2*y01**2 + 2*r1*r2*z00**2 - 4*r1*r2*z00*z01 + 2*r1*r2*z01**2 + r2**2*x00**2 - 2*r2**2*x00*x01 + r2**2*x01**2 + r2**2*y00**2 - 2*r2**2*y00*y01 + r2**2*y01**2 + r2**2*z00**2 - 2*r2**2*z00*z01 + r2**2*z01**2 - x00**2*y01**2 + 2*x00**2*y01*y10 - x00**2*y10**2 - x00**2*z01**2 + 2*x00**2*z01*z10 - x00**2*z10**2 + 2*x00*x01*y00*y01 - 2*x00*x01*y00*y10 - 2*x00*x01*y01*y10 + 2*x00*x01*y10**2 + 2*x00*x01*z00*z01 - 2*x00*x01*z00*z10 - 2*x00*x01*z01*z10 + 2*x00*x01*z10**2 - 2*x00*x10*y00*y01 + 2*x00*x10*y00*y10 + 2*x00*x10*y01**2 - 2*x00*x10*y01*y10 - 2*x00*x10*z00*z01 + 2*x00*x10*z00*z10 + 2*x00*x10*z01**2 - 2*x00*x10*z01*z10 - x01**2*y00**2 + 2*x01**2*y00*y10 - x01**2*y10**2 - x01**2*z00**2 + 2*x01**2*z00*z10 - x01**2*z10**2 + 2*x01*x10*y00**2 - 2*x01*x10*y00*y01 - 2*x01*x10*y00*y10 + 2*x01*x10*y01*y10 + 2*x01*x10*z00**2 - 2*x01*x10*z00*z01 - 2*x01*x10*z00*z10 + 2*x01*x10*z01*z10 - x10**2*y00**2 + 2*x10**2*y00*y01 - x10**2*y01**2 - x10**2*z00**2 + 2*x10**2*z00*z01 - x10**2*z01**2 - y00**2*z01**2 + 2*y00**2*z01*z10 - y00**2*z10**2 + 2*y00*y01*z00*z01 - 2*y00*y01*z00*z10 - 2*y00*y01*z01*z10 + 2*y00*y01*z10**2 - 2*y00*y10*z00*z01 + 2*y00*y10*z00*z10 + 2*y00*y10*z01**2 - 2*y00*y10*z01*z10 - y01**2*z00**2 + 2*y01**2*z00*z10 - y01**2*z10**2 + 2*y01*y10*z00**2 - 2*y01*y10*z00*z01 - 2*y01*y10*z00*z10 + 2*y01*y10*z01*z10 - y10**2*z00**2 + 2*y10**2*z00*z01 - y10**2*z01**2)))/(k1x**2*t0**2 + 2*k1x*t0*x00 - 2*k1x*t0*x01 + k1y**2*t0**2 + 2*k1y*t0*y00 - 2*k1y*t0*y01 + k1z**2*t0**2 + 2*k1z*t0*z00 - 2*k1z*t0*z01 + x00**2 - 2*x00*x01 + x01**2 + y00**2 - 2*y00*y01 + y01**2 + z00**2 - 2*z00*z01 + z01**2))